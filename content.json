{"meta":{"title":"THINK TWICE","subtitle":null,"description":null,"author":"yzc","url":"http://blog.yzcthinktwice.com"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-10-23T16:29:35.814Z","comments":false,"path":"about/index.html","permalink":"http://blog.yzcthinktwice.com/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-10-23T16:29:35.816Z","comments":false,"path":"client/index.html","permalink":"http://blog.yzcthinktwice.com/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-10-23T16:29:35.815Z","comments":false,"path":"bangumi/index.html","permalink":"http://blog.yzcthinktwice.com/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-10-23T16:29:35.816Z","comments":true,"path":"comment/index.html","permalink":"http://blog.yzcthinktwice.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-10-23T16:29:35.817Z","comments":false,"path":"lab/index.html","permalink":"http://blog.yzcthinktwice.com/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-10-23T16:29:35.817Z","comments":false,"path":"donate/index.html","permalink":"http://blog.yzcthinktwice.com/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2019-10-27T15:11:06.000Z","updated":"2019-10-27T14:44:38.022Z","comments":true,"path":"links/index.html","permalink":"http://blog.yzcthinktwice.com/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-10-23T16:29:35.820Z","comments":true,"path":"rss/index.html","permalink":"http://blog.yzcthinktwice.com/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-10-23T16:29:35.821Z","comments":true,"path":"tags/index.html","permalink":"http://blog.yzcthinktwice.com/tags/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-10-23T16:29:35.820Z","comments":false,"path":"music/index.html","permalink":"http://blog.yzcthinktwice.com/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-10-23T16:29:35.822Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://blog.yzcthinktwice.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-10-23T16:29:35.822Z","comments":false,"path":"video/index.html","permalink":"http://blog.yzcthinktwice.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"P3294 [SCOI2016]背单词","slug":"P3294 [SCOI2016]背单词","date":"2019-10-28T14:28:01.000Z","updated":"2019-10-28T14:43:52.641Z","comments":true,"path":"2019/10/28/P3294 [SCOI2016]背单词/","link":"","permalink":"http://blog.yzcthinktwice.com/2019/10/28/P3294 [SCOI2016]背单词/","excerpt":"","text":"P3294 【SCOI2016】背单词 题意（已用贪心思路简化）给定n个单词$s_i$，请重排序列，使每个单词的存在的后缀都在前面 设$s_j$为离$s_i$最近的后缀字符串 定义$a_i=i-j$ $ans=min(\\sum a_i)$ 题解后缀显然没有前缀来的容易处理，所以自然想到翻转每个单词，建出trie树 下面是个例子： 6 a ca ea gda hda ifb 1. 建出trie树(红点是颠倒后每个单词的末尾，注意根也是）： void ins(char *s){ int x=0; for(int i=0;s[i];i++){ if(!a[x].nt[s[i]-&#39;a&#39;]) a[x].nt[s[i]-&#39;a&#39;]=++cnt; x=a[x].nt[s[i]-&#39;a&#39;]; } a[x].tag=1; //tag==1说明是红点 } 2. 重构树跳过白点，保留红点（白点无用，可以忽略） void doit(int x){ if(a[x].tag&amp;&amp;x){ g[last[x]].push_back(x); //g[x][]存重构树中点x的儿子们 last[x]=x; //last[x]是原树里x节点上方离它最近的红点（包括自己） } for(int i=0;i&lt;26;i++) if(a[x].nt[i]){ last[a[x].nt[i]]=last[x]; doit(a[x].nt[i]); } } 3. dfs遍历重构树，并将直接祖先相同的子树按节点数从小到大排序 inline bool cmp(const int &amp;x,const int &amp;y){ return sz[x]&lt;sz[y]; } void dfs(int x){ sz[x]=1; //sz[x]是以x为根的子树的大小 for(int i=0;i&lt;g[x].size();i++){ dfs(g[x][i]); sz[x]+=sz[g[x][i]]; } sort(g[x].begin(),g[x].end(),cmp); } 4. 根据题意遍历重构树，用dfs序得到答案void getans(int x){ int dfn=cnt++; //dfn是父亲的dfs序，cnt是节点自己的dfs序 for(int i=0;i&lt;g[x].size();i++){ ans+=cnt-dfn; //两者相减就是题意里的ai getans(g[x][i]); } } 思路背后的理由Q1. 为什么题意可以这样简化？三条规则，规则一显然是可以被避免且没有后两种优的，规则二可以看做规则三的特殊情况，简单起见，只考虑规则三即可 Q2. 排序的正确性？花费与最后一个填入的后缀有关,那么这个后缀的位置离当前位置越近越好,也就是应该有尽量少的单词夹在两个中间,所以我们应该选下属单词最少的那个进行拓展，而下属单词的多少就等价于重构树中子树的大小。 Q3. dfs序的正确性？这里引用 @坐山客 的题解： 考虑重新建树之后，i节点的子树中的所有节点的后缀都是i 如果同一深度上有不止一棵子树，那么我们先在一棵上取出一个叶子节点j，再取出一个根节点i，我们发现如果j&gt;i的话肯定不如i&lt;j优秀 因为调整之后i的子树上所有节点对花费的贡献-=子树大小，j对花费的贡献+1，所以我们可以看到j&gt;i的花费&lt;=i&gt;j的情况 最后我们经过所有的调整可以发现序列变成了dfs序 所以dfs序最优 完整代码将以上各步骤代码合在一起就是： tips. ANS要用long long!!! #include &lt;bits/stdc++.h&gt; using namespace std; inline int read(int &amp;x){ char c=getchar();bool f=0;x=0; while(!isdigit(c)) f|=c==&#39;-&#39;,c=getchar(); while(isdigit(c)) x=(x&lt;&lt;1)+(x&lt;&lt;3)+(c^48),c=getchar(); if(f) x=-x;return x; } inline void write(long long x){ if(x&lt;0) putchar(&#39;-&#39;),write(-x); else{if(x&gt;9) write(x/10);putchar(&#39;0&#39;+x%10);} } const int L=5.1e5+5; struct node{ //trie树的每个节点 int nt[26]; bool tag; }; long long ans; int cnt,last[L],sz[L],n; vector&lt;int&gt; g[L]; char s[L]; struct trie{ //trie及所需操作 node a[L]; int cnt; void ins(char *s){ //建树 int x=0; for(int i=0;s[i];i++){ if(!a[x].nt[s[i]-&#39;a&#39;]) a[x].nt[s[i]-&#39;a&#39;]=++cnt; x=a[x].nt[s[i]-&#39;a&#39;]; } a[x].tag=1; } void doit(int x){ //重构树 if(a[x].tag&amp;&amp;x){ g[last[x]].push_back(x); last[x]=x; } for(int i=0;i&lt;26;i++) if(a[x].nt[i]){ last[a[x].nt[i]]=last[x]; doit(a[x].nt[i]); } } }tr; inline bool cmp(const int &amp;x,const int &amp;y){ return sz[x]&lt;sz[y]; } void dfs(int x){ //重排重构树 sz[x]=1; for(int i=0;i&lt;g[x].size();i++){ dfs(g[x][i]); sz[x]+=sz[g[x][i]]; } sort(g[x].begin(),g[x].end(),cmp); } void getans(int x){ //统计答案 int dfn=cnt++; for(int i=0;i&lt;g[x].size();i++){ ans+=cnt-dfn; getans(g[x][i]); } } signed main(){ read(n); for(int i=1;i&lt;=n;i++){ scanf(&quot;%s&quot;,s); reverse(s,s+strlen(s)); //反转单词 tr.ins(s); } tr.a[0].tag=1; //根也是红点 tr.doit(0); dfs(0); getans(0); write(ans); }","categories":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}],"tags":[{"name":"洛谷","slug":"洛谷","permalink":"http://blog.yzcthinktwice.com/tags/洛谷/"},{"name":"字典树","slug":"字典树","permalink":"http://blog.yzcthinktwice.com/tags/字典树/"},{"name":"贪心","slug":"贪心","permalink":"http://blog.yzcthinktwice.com/tags/贪心/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}]},{"title":"P2658 【汽车拉力比赛】","slug":"P2658 【汽车拉力比赛】","date":"2019-10-27T14:49:01.000Z","updated":"2019-10-28T14:30:01.592Z","comments":true,"path":"2019/10/27/P2658 【汽车拉力比赛】/","link":"","permalink":"http://blog.yzcthinktwice.com/2019/10/27/P2658 【汽车拉力比赛】/","excerpt":"","text":"P2658 【汽车拉力比赛】并查集的思路很多人已经讲过了，我这里提供几个并查集方法的（常数）优化 路径压缩&amp;按秩合并 int getf(int x){ if(f[x]==x) return x; return f[x]=getf(f[x]); } void unite(int x,int y){ int fx=getf(x),fy=getf(y); if(fx==fy) return; if(rk[fx]&lt;rk[fy]) f[fx]=fy; else f[fy]=fx; if(rk[fx]==rk[fy]) rk[fx]++; } 路径压缩应该很多人都加了吧。。。 四个方向（上下左右）-&gt;两个方向（下右） 边是双向的，而且是网格图，因此是有个层次性的，无需重复地双向都unite 将每个路标的fa与第一个路标的fa比较 可以节约一半的getf 另外，感觉自己的码风还挺好理解的。。。 #include &lt;bits/stdc++.h&gt; using namespace std; inline int read(int &amp;x){ char c=getchar();bool f=0;x=0; while(!isdigit(c)) f|=c==&#39;-&#39;,c=getchar(); while(isdigit(c)) x=(x&lt;&lt;1)+(x&lt;&lt;3)+(c^48),c=getchar(); if(f) x=-x;return x; } inline void write(int x){ if(x&lt;0) putchar(&#39;-&#39;),write(-x); else{if(x&gt;9) write(x/10);putchar(&#39;0&#39;+x%10);} } const int N=505; int n,m,f[N*N],ans,rk[N*N],a[N][N],l,r; vector&lt;int&gt; tag; inline int hash(int x,int y){ return (x-1)*m+y; } inline int getf(int x){ if(f[x]==x) return x; return f[x]=getf(f[x]); //路径压缩 } inline void unite(int x,int y){ int fx=getf(x),fy=getf(y); if(fx==fy) return; if(rk[fx]&lt;rk[fy]) f[fx]=fy; //按秩合并 else f[fy]=fx; if(rk[fx]==rk[fy]) rk[fx]++; } inline bool check(int k){ for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=m;j++) f[hash(i,j)]=hash(i,j),rk[hash(i,j)]=1; //并查集初始化 for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=m;j++){ if(abs(a[i][j]-a[i+1][j])&lt;=k&amp;&amp;i+1&lt;=n) //向下unite(hash(i,j),hash(i+1,j)); if(abs(a[i][j]-a[i][j+1])&lt;=k&amp;&amp;j+1&lt;=m) //向右 unite(hash(i,j),hash(i,j+1)); } int fa=getf(tag[0]); //先得到第一个fa for(int i=1;i&lt;tag.size();i++) if(getf(tag[i])!=fa) //后面的与第一个比较 return 0; return 1; } signed main(){ read(n);read(m); for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=m;j++){ read(a[i][j]); r=max(r,a[i][j]); } for(int i=1;i&lt;=n;i++) for(int j=1,x;j&lt;=m;j++){ read(x); if(x) tag.push_back(hash(i,j)); //我用vector存路标 } while(l&lt;=r){ int mid=(l+r)&gt;&gt;1; if(check(mid)) r=mid-1,ans=mid; else l=mid+1; } write(ans); } 另外，我这份代码是用c++交的，c++11以上会ce","categories":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}],"tags":[{"name":"洛谷","slug":"洛谷","permalink":"http://blog.yzcthinktwice.com/tags/洛谷/"},{"name":"二分答案","slug":"二分答案","permalink":"http://blog.yzcthinktwice.com/tags/二分答案/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}]},{"title":"CF再次被skip","slug":"CF再次被skip","date":"2019-10-26T15:22:01.000Z","updated":"2019-10-26T15:28:13.021Z","comments":true,"path":"2019/10/26/CF再次被skip/","link":"","permalink":"http://blog.yzcthinktwice.com/2019/10/26/CF再次被skip/","excerpt":"","text":"时隔多日，今天又来打打CF，本来可以上蓝的说。。。 结果sb又把自己skip了，一晚上白给 自闭了QAQ","categories":[{"name":"日记","slug":"日记","permalink":"http://blog.yzcthinktwice.com/categories/日记/"}],"tags":[],"keywords":[{"name":"日记","slug":"日记","permalink":"http://blog.yzcthinktwice.com/categories/日记/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2019-10-25T15:38:55.245Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"http://blog.yzcthinktwice.com/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}],"tags":[{"name":"web","slug":"web","permalink":"http://blog.yzcthinktwice.com/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"http://blog.yzcthinktwice.com/tags/悦读/"}],"keywords":[{"name":"算法","slug":"算法","permalink":"http://blog.yzcthinktwice.com/categories/算法/"}]}]}